logging.level.root=INFO
logging.level.com.aruba=DEBUG

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=none
spring.datasource.url=jdbc:postgresql://${server.ip}:5432/demodb
spring.datasource.username=postgresusr
spring.datasource.password=postgrespwd

server.ip=${HOST}


#jwk-set-uri property points to the URI containing the public key so that our Resource Server can verify the tokens' integrity
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://${server.ip}:8085/realms/SpringBootKeycloak/protocol/openid-connect/certs
#The issuer-uri property represents an additional security measure to validate the issuer of the tokens (which is the Authorization Server)
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://${server.ip}:8085/realms/SpringBootKeycloak

#spring.security.oauth2.client.registration.keycloak.client-id=login-app
#spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.keycloak.scope=openid
#
#
#spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8085/realms/SpringBootKeycloak
##spring.security.oauth2.client.provider.keycloak.user-name-attribute=enricopero
